name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

permissions:
  contents: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow pillow-heif

      - name: Build with PyInstaller
        run: |
          pyinstaller --name ImageConverter `
            --windowed `
            --onefile `
            --add-data "app_icon.ico;." `
            --hidden-import PIL._tkinter_finder `
            --icon=app_icon.ico `
            image_converter.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/ImageConverter.exe

  build-macos-arm64:
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow pillow-heif

      - name: Create Info.plist
        run: |
          cat > Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDisplayName</key>
              <string>ImageConverter</string>
              <key>CFBundleExecutable</key>
              <string>ImageConverter</string>
              <key>CFBundleIconFile</key>
              <string>icon.icns</string>
              <key>CFBundleIdentifier</key>
              <string>com.imageconverter.app</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>ImageConverter</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0.0</string>
              <key>LSMinimumSystemVersion</key>
              <string>10.13.0</string>
              <key>NSHighResolutionCapable</key>
              <true/>
          </dict>
          </plist>
          EOF

      - name: Build with PyInstaller
        run: |
          # Build for ARM64
          pyinstaller --name ImageConverter \
            --windowed \
            --add-data "app_icon.ico:." \
            --hidden-import PIL._tkinter_finder \
            --icon=app_icon.ico \
            --osx-bundle-identifier=com.imageconverter.app \
            image_converter.py
          
          # Copy Info.plist
          cp Info.plist dist/ImageConverter.app/Contents/Info.plist
          
          # Create temporary entitlements file
          cat > entitlements.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>com.apple.security.automation.apple-events</key>
              <true/>
              <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
              <true/>
              <key>com.apple.security.cs.disable-library-validation</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          # Sign the application
          codesign --force --deep --options runtime --entitlements entitlements.plist --sign - dist/ImageConverter.app

      - name: Upload ARM64 Build
        uses: actions/upload-artifact@v3
        with:
          name: macos-arm64-build
          path: dist/ImageConverter.app

  build-macos-intel:
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow pillow-heif

      - name: Build with PyInstaller
        run: |
          # Build for Intel
          arch -x86_64 pyinstaller --name ImageConverter \
            --windowed \
            --add-data "app_icon.ico:." \
            --hidden-import PIL._tkinter_finder \
            --icon=app_icon.ico \
            --osx-bundle-identifier=com.imageconverter.app \
            image_converter.py
          
          # Copy Info.plist
          cp Info.plist dist/ImageConverter.app/Contents/Info.plist
          
          # Create temporary entitlements file
          cat > entitlements.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>com.apple.security.automation.apple-events</key>
              <true/>
              <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
              <true/>
              <key>com.apple.security.cs.disable-library-validation</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          # Sign the application
          codesign --force --deep --options runtime --entitlements entitlements.plist --sign - dist/ImageConverter.app

      - name: Upload Intel Build
        uses: actions/upload-artifact@v3
        with:
          name: macos-intel-build
          path: dist/ImageConverter.app

  create-release:
    needs: [build-windows, build-macos-arm64, build-macos-intel]
    runs-on: macos-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create Universal App
        run: |
          set -e  # Exit on any error
          
          echo "Creating universal app structure..."
          mkdir -p universal/ImageConverter.app/Contents/{MacOS,Resources}
          
          echo "Debugging: Show full artifact structure"
          find artifacts/ -type f
          
          # Copy Intel app structure
          cp -r artifacts/macos-intel-build/Contents/* universal/ImageConverter.app/Contents/
          
          # Create universal binary
          lipo -create \
            artifacts/macos-intel-build/Contents/MacOS/ImageConverter \
            artifacts/macos-arm64-build/Contents/MacOS/ImageConverter \
            -output universal/ImageConverter.app/Contents/MacOS/ImageConverter
          
          chmod +x universal/ImageConverter.app/Contents/MacOS/ImageConverter
          
          # Create temporary entitlements file
          cat > entitlements.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>com.apple.security.automation.apple-events</key>
              <true/>
              <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
              <true/>
              <key>com.apple.security.cs.disable-library-validation</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          # Sign the universal app
          codesign --force --deep --options runtime --entitlements entitlements.plist --sign - universal/ImageConverter.app

      - name: Create DMG
        run: |
          set -e  # Exit on any error
          
          echo "Creating DMG..."
          create-dmg \
            --volname "ImageConverter" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "ImageConverter.app" 200 190 \
            --hide-extension "ImageConverter.app" \
            --app-drop-link 600 185 \
            "ImageConverter.dmg" \
            "universal/"
            
          # Sign the DMG
          codesign --sign - "ImageConverter.dmg"
          
          echo "Verifying DMG..."
          if [ ! -f "ImageConverter.dmg" ]; then
            echo "Error: DMG not created"
            exit 1
          fi
          
          DMG_SIZE=$(stat -f%z "ImageConverter.dmg")
          echo "DMG size: $DMG_SIZE bytes"
          if [ $DMG_SIZE -lt 1000000 ]; then
            echo "Error: DMG file is suspiciously small"
            exit 1
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-build/ImageConverter.exe
            ImageConverter.dmg
          name: Release ${{ github.ref_name }}
          body: |
            Image Converter Release ${{ github.ref_name }}
            
            ## Installation
            ### Windows
            1. Download ImageConverter.exe
            2. Run the executable
            
            ### Mac (Universal - supports both Intel and Apple Silicon)
            1. Download ImageConverter.dmg
            2. Open the DMG file
            3. Drag ImageConverter to your Applications folder
            
            ## Changes in this version
            - Universal Mac support (Intel and Apple Silicon)
            - [Add other changes here]
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}